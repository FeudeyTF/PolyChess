using PolyChessTGBot.Bot.Buttons;
using PolyChessTGBot.Bot.Commands;
using PolyChessTGBot.Bot.Commands.Basic;
using PolyChessTGBot.Bot.Commands.Discrete;
using PolyChessTGBot.Bot.Messages;
using PolyChessTGBot.Bot.Messages.Discrete;
using PolyChessTGBot.Extensions;
using System.Diagnostics;
using System.Reflection;
using Telegram.Bot.Types;
using Telegram.Bot.Types.ReplyMarkups;
using File = System.IO.File;

namespace PolyChessTGBot.Bot.BotCommands
{
    public partial class BotCommands
    {
        public static readonly string TempPath;

        static BotCommands()
        {
            TempPath = Path.Combine(Environment.CurrentDirectory, "Temp");
        }

        [Command("info", "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ", true)]
        private async Task Version(CommandArgs args)
        {
            string exeFilePath = Path.Combine(
                Environment.CurrentDirectory,
                Assembly.GetExecutingAssembly().GetName().Name + ".exe");
            List<string> message =
            [
                "üõ†<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ</b>üõ†",
                $"üë®üèª‚Äçüíª<b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏:</b> {Program.MainConfig.BotAuthor}",
                $"üîÄ<b>–í–µ—Ä—Å–∏—è –±–æ—Ç–∞:</b> v.{FileVersionInfo.GetVersionInfo(exeFilePath).FileVersion}",
                $"üïê<b>–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:</b> {File.GetLastWriteTime(exeFilePath):g}",
                $"‚è±<b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> {DateTime.Now - Program.Started:%d' –¥–Ω. '%h' —á. '%m' –º–∏–Ω. '%s' —Å–µ–∫.'}"
            ];
            await args.Reply(string.Join("\n", message));
        }

        [DiscreteCommand("task", "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –ü–∞–≤–ª—É", ["–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–æ–º —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –∑–∞–¥–∞–Ω–∏–µ–º"])]
        private async Task SendCreativeTask(CommandArgs<Message> args)
        {
            if (args.Parameters.Count == 1)
            {
                var msg = args.Parameters[0];
                if(msg.Document != null)
                {
                    var user = Program.Data.GetUser(args.User.Id);
                    if(user != null)
                    {
                        if (!user.CreativeTaskCompleted)
                        {
                            List<string> text = ["–ü—Ä–∏—à–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ!"];
                            text.Add($"–°—Ç—É–¥–µ–Ω—Ç: <b>{user.Name}</b>");
                            text.Add($"–ö—É—Ä—Å: <b>{user.Year}</b>");
                            text.Add($"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞:");
                            text.Add($"<b>{msg.Text ?? msg.Caption ?? "–°—Ç—É–¥–µ–Ω—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"}</b>");
                            TelegramMessageBuilder message = new(string.Join("\n", text));
                            message.WithFile(msg.Document.FileId);

                            InlineKeyboardButton approveButton = new("‚úÖ –ü—Ä–∏–Ω—è—Ç—å");
                            approveButton.SetData("CreativeTaskApprove", ("ID", user.TelegramID));
                            InlineKeyboardButton declineButton = new("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å");
                            declineButton.SetData("CreativeTaskDecline", ("ID", user.TelegramID));

                            message.AddKeyboard([approveButton, declineButton]);

                            await args.Bot.SendMessage(message, Program.MainConfig.CreativeTaskChannel);
                            await args.Reply("–¢–≤–æ—Ä—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
                        }
                        else
                            await args.Reply("–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ!");
                    }
                    else
                        await args.Reply("–í–∞—Å –Ω–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ!");
                }
                else
                    await args.Reply("–í—ã –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–∏–ª–∏ —Ñ–∞–π–ª –∫ —Å–æ–æ–±—â–µ–Ω–∏—é!");
            }
            else
                await args.Reply("–í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ!");
        }

        [Button("CreativeTaskApprove")]
        private async Task CreativeTaskApprove(ButtonInteractArgs args)
        {
            if (args.Query.Message != null)
            {
                var telegramID = args.GetLongNumber("ID");
                var user = Program.Data.GetUser(telegramID);
                if (user != null)
                {
                    user.CreativeTaskCompleted = true;
                    Program.Data.Query($"UPDATE Users SET CreativeTaskCompleted='1' WHERE TelegramID='{telegramID}'");
                    await args.Bot.SendMessage($"–í–∞—à–µ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –±—ã–ª–æ <b>–ø—Ä–∏–Ω—è—Ç–æ</b>! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã - <b>–º–æ–ª–æ–¥–µ—Ü</b>", telegramID);
                  
                    TelegramMessageBuilder builder = new("[–ü–†–ò–ù–Ø–¢–û]\n" + (args.Query.Message.Text ?? args.Query.Message.Caption));
                    if(args.Query.Message.Document != null)
                        builder.WithFile(args.Query.Message.Document.FileId);

                    await args.Bot.EditMessage(builder, args.Query.Message.Chat.Id, args.Query.Message);
                    await args.Reply($"–í—ã —É—Å–ø–µ—à–Ω–æ <b>–ø—Ä–∏–Ω—è–ª–∏</b> –∑–∞–¥–∞–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ <b>{user.Name}</b>");
                }
                else
                    await args.Reply("–°—Ç—É–¥–µ–Ω—Ç –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!");
            }
        }

        [Button("CreativeTaskDecline")]
        private async Task CreativeTaskDecline(ButtonInteractArgs buttonArgs)
        {
            if (buttonArgs.Query.Message != null)
                await buttonArgs.SendDiscreteMessage(
                    buttonArgs.Query.Message.Chat.Id,
                    ["–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è"],
                    OnCreativeTaskMessageEntered,
                    data: buttonArgs.GetLongNumber("ID")
                );

            async Task OnCreativeTaskMessageEntered(DiscreteMessageEnteredArgs args)
            {
                if(args.Responses.Length == 1 && buttonArgs.Query.Message != null)
                {
                    var telegramID = (long)args.Data[0];
                    var user = Program.Data.GetUser(telegramID);
                    if (user != null)
                    {
                        TelegramMessageBuilder builder = new("[–ü–†–ò–ù–Ø–¢–û]\n" + (buttonArgs.Query.Message.Text ?? buttonArgs.Query.Message.Caption));
                        if (buttonArgs.Query.Message.Document != null)
                            builder.WithFile(buttonArgs.Query.Message.Document.FileId);
                        
                        await args.Bot.EditMessage(builder, buttonArgs.Query.Message.Chat.Id, buttonArgs.Query.Message);
                        await args.Bot.SendMessage($"–í–∞—à–µ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ <b>–±—ã–ª–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ</b> –ø–æ –ø—Ä–∏—á–∏–Ω–µ:\n{args.Responses[0].Text}", telegramID);
                        await args.Reply($"–í—ã —É—Å–ø–µ—à–Ω–æ <b>–æ—Ç–∫–ª–æ–Ω–∏–ª–∏</b> –∑–∞–¥–∞–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ <b>{user.Name}</b>");
                    }
                    else
                        await args.Reply("–°—Ç—É–¥–µ–Ω—Ç –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!");
                }
            }
        }
    }
}