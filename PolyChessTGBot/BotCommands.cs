using PolyChessTGBot.Bot.Commands;
using Telegram.Bot;
using Telegram.Bot.Types.Enums;

namespace PolyChessTGBot
{
    public class BotCommands
    {
        [Command("question", "test command")]
        public async Task Question(CommandArgs args)
        {
            string question = string.Join(" ", args.Parameters);
            if(!string.IsNullOrEmpty(question))
            {
                List<string> message = new()
                {
                    "**__–í–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!__**üôã‚Äç‚ôÇÔ∏è",
                    $"üë§**–ù–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** {args.User.Username}",
                    $"üë§**–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** {args.User.FirstName} {args.User.LastName}",
                    $"üïë**–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:** {args.Message.Date:G}",
                    $"‚ùì**–í–æ–ø—Ä–æ—Å:**\n{question}",
                    $"||{args.User.Id}||"
                };
                await args.Bot.SendTextMessageAsync(Program.MainConfig.QuestionChannel, string.Join("\n", message).RemoveBadSymbols(), parseMode: ParseMode.MarkdownV2);
            }
            else
                await args.Bot.SendTextMessageAsync(args.User.Id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥—ë–Ω –≤–æ–ø—Ä–æ—Å!");
        }
        
        [Command("cstats", "test command")]
        public async Task Stats(CommandArgs args)
        {
            await args.Bot.SendTextMessageAsync(args.Message.Chat.Id, $"–ê–π–¥–∏ –∫–∞–Ω–∞–ª–∞: {args.Message.Chat.Id}");
        }
    }
}