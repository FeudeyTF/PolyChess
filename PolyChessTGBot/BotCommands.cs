using PolyChessTGBot.Bot.Commands;
using Telegram.Bot;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.ReplyMarkups;

namespace PolyChessTGBot
{
    public class BotCommands
    {
        [Command("question", "–°–∏–Ω—Ç–∞–∫—Å–∏—Å: /question \"–≤–æ–ø—Ä–æ—Å\". –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–æ–ø—Ä–æ—Å –Ω–∞–ø—Ä—è–º—É—é –ü–∞–≤–ª—É", visible: true)]
        public async Task Question(CommandArgs args)
        {
            string question = string.Join(" ", args.Parameters);
            if (!string.IsNullOrEmpty(question))
            {
                List<string> message = new()
                {
                    "**__–í–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!__**üôã‚Äç‚ôÇÔ∏è",
                    $"üë§**–ù–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** @{args.User.Username}",
                    $"üë§**–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** {args.User.FirstName} {args.User.LastName}",
                    $"üïë**–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:** {args.Message.Date:G}",
                    $"‚ùì**–í–æ–ø—Ä–æ—Å:**\n{question}"
                };
                var data = Utils.GetDataString("QuestionDataID", ("ID", args.User.Id), ("ChannelID", args.Message.MessageId));
                InlineKeyboardMarkup uesrInfo = new(new InlineKeyboardButton("–î–∞–Ω–Ω—ã–µ") { CallbackData = data });
                await args.Bot.SendTextMessageAsync(Program.MainConfig.QuestionChannel, string.Join("\n", message).RemoveBadSymbols(), parseMode: ParseMode.MarkdownV2, replyMarkup: uesrInfo);
            }
            else
                await args.Reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥—ë–Ω –≤–æ–ø—Ä–æ—Å!");
        }

        [Command("cstats", "–ü–æ–∫–∞–∂–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–∞–Ω–∞–ª–∞")]
        public async Task Stats(CommandArgs args)
        {
            await args.Reply($"–ê–π–¥–∏ –∫–∞–Ω–∞–ª–∞: {args.Message.Chat.Id}");
        }

        [Command("users", "–ü–æ–∫–∞–∂–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–∞–Ω–∞–ª–∞")]
        public async Task GetUsers(CommandArgs args)
        {
            List<User> users = new();
            using var reader = Program.Data.SelectQuery("SELECT * FROM Users");
            while (reader.Read())
                users.Add(new(reader.Get<int>("TelegramID"), reader.Get("Name"), reader.Get<int>("Year")));
            await args.Reply($"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {string.Join("\n", users)}");
        }

        private struct User
        {
            public long TelegramID;

            public string Name;

            public long Year;

            public User(long telegramID, string name, long year)
            {
                TelegramID = telegramID;
                Name = name;
                Year = year;
            }

            public override string ToString()
            {
                return $"{Name} ({TelegramID}), –ö—É—Ä—Å - {Year}";
            }
        }
    }
}